{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\ReactJS\\\\mimba\\\\src\\\\Components\\\\Content\\\\Profiles\\\\Profiles.jsx\";\nimport React from 'react';\nimport S from './Profiles.module.css';\nimport Profile from './Profile/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = props => {\n  let profileRoutes = props.PrInf.map(elem => /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/Profile/\" + elem.id,\n    element: /*#__PURE__*/_jsxDEV(Profile, {\n      name: elem.name,\n      interes: elem.interes,\n      about: elem.about,\n      meet: elem.meet,\n      whoFind: elem.whoFind,\n      photo: elem.photo,\n      age: elem.age,\n      city: elem.city,\n      country: elem.country,\n      id: elem.id\n    }, elem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 102\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 50\n  }, this));\n  let messageRoutes = props.PrInf.map(elem => /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/Messenger/\" + elem.id,\n    element: /*#__PURE__*/_jsxDEV(Messenger, {\n      name: elem.name,\n      interes: elem.interes,\n      about: elem.about,\n      meet: elem.meet,\n      whoFind: elem.whoFind,\n      photo: elem.photo,\n      age: elem.age,\n      city: elem.city,\n      country: elem.country,\n      id: elem.id\n    }, elem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 105\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: S.profiles,\n    children: props.Profiles.PrInf.map(mini => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: S.profile,\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        country: mini.country,\n        city: mini.city,\n        age: mini.age,\n        photo: mini.photo,\n        name: mini.name,\n        id: mini.id\n      }, mini.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), profileRoutes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 47\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Profiles;\nexport default Profiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","S","Profile","Profiles","props","profileRoutes","PrInf","map","elem","id","name","interes","about","meet","whoFind","photo","age","city","country","messageRoutes","profiles","mini","profile"],"sources":["D:/Work/ReactJS/mimba/src/Components/Content/Profiles/Profiles.jsx"],"sourcesContent":["import React from 'react';\r\nimport S from './Profiles.module.css'\r\nimport Profile from './Profile/Profile'\r\nconst Profiles = (props) => \r\n{\r\n  let profileRoutes = props.PrInf.map((elem) => (<Route  exact path={\"/Profile/\" + elem.id} element={<Profile name={elem.name}\r\n  interes={elem.interes} about={elem.about} meet={elem.meet} whoFind={elem.whoFind}\r\n   photo={elem.photo} age = {elem.age} city={elem.city} country={elem.country} id={elem.id} key={elem.id}/>}/>))\r\n   let messageRoutes = props.PrInf.map((elem) => (<Route  exact path={\"/Messenger/\" + elem.id} element={<Messenger  name={elem.name}\r\n   interes={elem.interes} about={elem.about} meet={elem.meet} whoFind={elem.whoFind}\r\n    photo={elem.photo} age = {elem.age} city={elem.city} country={elem.country} id={elem.id} key={elem.id}/>}/>))\r\n    return(\r\n      <div className={S.profiles}>\r\n        {props.Profiles.PrInf.map((mini) =>  (<div className={S.profile}>\r\n    <Profile country={mini.country} city={mini.city} age={mini.age} photo={mini.photo} name={mini.name} id={mini.id} key = {mini.id}/>\r\n    {profileRoutes}\r\n    </div>) )}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profiles;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IACjB;EACE,IAAIC,aAAa,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBAAW,QAAC,KAAD;IAAQ,KAAK,MAAb;IAAc,IAAI,EAAE,cAAcA,IAAI,CAACC,EAAvC;IAA2C,OAAO,eAAE,QAAC,OAAD;MAAS,IAAI,EAAED,IAAI,CAACE,IAApB;MACnG,OAAO,EAAEF,IAAI,CAACG,OADqF;MAC5E,KAAK,EAAEH,IAAI,CAACI,KADgE;MACzD,IAAI,EAAEJ,IAAI,CAACK,IAD8C;MACxC,OAAO,EAAEL,IAAI,CAACM,OAD0B;MAElG,KAAK,EAAEN,IAAI,CAACO,KAFsF;MAE/E,GAAG,EAAIP,IAAI,CAACQ,GAFmE;MAE9D,IAAI,EAAER,IAAI,CAACS,IAFmD;MAE7C,OAAO,EAAET,IAAI,CAACU,OAF+B;MAEtB,EAAE,EAAEV,IAAI,CAACC;IAFa,GAEJD,IAAI,CAACC,EAFD;MAAA;MAAA;MAAA;IAAA;EAApD;IAAA;IAAA;IAAA;EAAA,QAA3B,CAApB;EAGC,IAAIU,aAAa,GAAGf,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBAAW,QAAC,KAAD;IAAQ,KAAK,MAAb;IAAc,IAAI,EAAE,gBAAgBA,IAAI,CAACC,EAAzC;IAA6C,OAAO,eAAE,QAAC,SAAD;MAAY,IAAI,EAAED,IAAI,CAACE,IAAvB;MACrG,OAAO,EAAEF,IAAI,CAACG,OADuF;MAC9E,KAAK,EAAEH,IAAI,CAACI,KADkE;MAC3D,IAAI,EAAEJ,IAAI,CAACK,IADgD;MAC1C,OAAO,EAAEL,IAAI,CAACM,OAD4B;MAEpG,KAAK,EAAEN,IAAI,CAACO,KAFwF;MAEjF,GAAG,EAAIP,IAAI,CAACQ,GAFqE;MAEhE,IAAI,EAAER,IAAI,CAACS,IAFqD;MAE/C,OAAO,EAAET,IAAI,CAACU,OAFiC;MAExB,EAAE,EAAEV,IAAI,CAACC;IAFe,GAEND,IAAI,CAACC,EAFC;MAAA;MAAA;MAAA;IAAA;EAAtD;IAAA;IAAA;IAAA;EAAA,QAA3B,CAApB;EAGC,oBACE;IAAK,SAAS,EAAER,CAAC,CAACmB,QAAlB;IAAA,UACGhB,KAAK,CAACD,QAAN,CAAeG,KAAf,CAAqBC,GAArB,CAA0Bc,IAAD,iBAAY;MAAK,SAAS,EAAEpB,CAAC,CAACqB,OAAlB;MAAA,wBAC1C,QAAC,OAAD;QAAS,OAAO,EAAED,IAAI,CAACH,OAAvB;QAAgC,IAAI,EAAEG,IAAI,CAACJ,IAA3C;QAAiD,GAAG,EAAEI,IAAI,CAACL,GAA3D;QAAgE,KAAK,EAAEK,IAAI,CAACN,KAA5E;QAAmF,IAAI,EAAEM,IAAI,CAACX,IAA9F;QAAoG,EAAE,EAAEW,IAAI,CAACZ;MAA7G,GAAwHY,IAAI,CAACZ,EAA7H;QAAA;QAAA;QAAA;MAAA,QAD0C,EAEzCJ,aAFyC;IAAA;MAAA;MAAA;MAAA;IAAA,QAArC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAQH,CAhBD;;KAAMF,Q;AAkBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}