{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nexport const letEnter = createAction('letEnter');\nexport const changeNameField = createAction('changeName', text => {\n  return {\n    payload: {\n      text: text\n    }\n  };\n});\nexport const changeEmailField = createAction('changeEmail', text => {\n  return {\n    payload: {\n      text: text\n    }\n  };\n});\nexport const returnToLogin = createAction('returnToLogin');\nexport const checkNameField = createAction('checkIfNameFilled');\nexport const checkEmailField = createAction('checkIfEmailFilled');\nlet initialState = {\n  isAuth: false,\n  areFilled: {\n    isNameFilled: false,\n    isEmailFilled: false\n  },\n  Fields: {\n    name: '',\n    email: ''\n  }\n};\nconst LoginReducer = createReducer(initialState, {\n  [checkNameField]: state => {\n    if (state.Fields.name) {\n      state.areFilled.isNameFilled = true;\n    } else {\n      state.areFilled.isNameFilled = false;\n    }\n  },\n  [changeNameField]: (state, action) => {\n    state.Fields.name = action.payload.text;\n  },\n  [changeEmailField]: (state, action) => {\n    state.Fields.email = action.payload.text;\n  },\n  [checkEmailField]: state => {\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    const result = pattern.test(state.Fields.email);\n\n    if (result) {\n      state.areFilled.isEmailFilled = true;\n    } else {\n      state.areFilled.isNameFilled = false;\n    }\n  },\n  [returnToLogin]: state => {\n    state.areFilled.isNameFilled = false;\n    state.areFilled.isEmailFilled = false;\n    state.isAuth = false;\n  },\n  [letEnter]: state => {\n    state.isAuth = true;\n  }\n});\nexport default LoginReducer;","map":{"version":3,"names":["createAction","createReducer","letEnter","changeNameField","text","payload","changeEmailField","returnToLogin","checkNameField","checkEmailField","initialState","isAuth","areFilled","isNameFilled","isEmailFilled","Fields","name","email","LoginReducer","state","action","pattern","result","test"],"sources":["D:/Work/ReactJS/mimba/src/Redux/LoginReducer.js"],"sourcesContent":["import {createAction, createReducer} from '@reduxjs/toolkit'\r\n\r\nexport const letEnter = createAction('letEnter')\r\n\r\nexport const changeNameField = createAction('changeName', (text) => {return {payload:\r\n  {\r\n    text:text\r\n  }}})\r\n  export const changeEmailField = createAction('changeEmail', (text) => {return {payload:\r\n    {\r\n      text:text\r\n    }}})\r\n  export const returnToLogin = createAction('returnToLogin')\r\n\r\nexport const checkNameField = createAction('checkIfNameFilled')\r\nexport const checkEmailField = createAction('checkIfEmailFilled')\r\n  let initialState =\r\n{\r\n  isAuth:false,\r\n        areFilled:\r\n        {\r\n            isNameFilled:false,\r\n            isEmailFilled:false\r\n        },\r\n        Fields:\r\n        {\r\n          name:'',\r\n          email:''\r\n        }\r\n}\r\n  \r\n\r\nconst LoginReducer = createReducer( initialState, {\r\n  [checkNameField]:(state) =>\r\n  {\r\n    if(state.Fields.name)\r\n    {\r\n      state.areFilled.isNameFilled = true\r\n    }\r\n    else\r\n    {\r\n        state.areFilled.isNameFilled = false;\r\n    }\r\n  },\r\n  [changeNameField] : (state, action) =>\r\n  {\r\n    state.Fields.name = action.payload.text\r\n   \r\n  },\r\n  [changeEmailField] : (state, action) =>\r\n  {\r\n    state.Fields.email = action.payload.text\r\n  },\r\n  [checkEmailField] : (state) =>\r\n  {\r\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n   const result = pattern.test(state.Fields.email);\r\n   if(result)\r\n   {\r\n    state.areFilled.isEmailFilled = true;\r\n   }\r\n   else\r\n   {\r\n    state.areFilled.isNameFilled = false;\r\n   }\r\n  },\r\n  [returnToLogin] : (state) =>\r\n  {\r\n    state.areFilled.isNameFilled = false;\r\n    state.areFilled.isEmailFilled = false;\r\n    state.isAuth = false;\r\n  },\r\n  [letEnter] : (state) =>\r\n  {\r\n    state.isAuth = true\r\n  }\r\n  \r\n      \r\n \r\n  }\r\n)\r\n\r\nexport default LoginReducer;"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,kBAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,YAAY,CAAC,UAAD,CAA7B;AAEP,OAAO,MAAMG,eAAe,GAAGH,YAAY,CAAC,YAAD,EAAgBI,IAAD,IAAU;EAAC,OAAO;IAACC,OAAO,EAClF;MACED,IAAI,EAACA;IADP;EAD0E,CAAP;AAGhE,CAHsC,CAApC;AAIL,OAAO,MAAME,gBAAgB,GAAGN,YAAY,CAAC,aAAD,EAAiBI,IAAD,IAAU;EAAC,OAAO;IAACC,OAAO,EACpF;MACED,IAAI,EAACA;IADP;EAD4E,CAAP;AAGlE,CAHuC,CAArC;AAIP,OAAO,MAAMG,aAAa,GAAGP,YAAY,CAAC,eAAD,CAAlC;AAET,OAAO,MAAMQ,cAAc,GAAGR,YAAY,CAAC,mBAAD,CAAnC;AACP,OAAO,MAAMS,eAAe,GAAGT,YAAY,CAAC,oBAAD,CAApC;AACL,IAAIU,YAAY,GAClB;EACEC,MAAM,EAAC,KADT;EAEQC,SAAS,EACT;IACIC,YAAY,EAAC,KADjB;IAEIC,aAAa,EAAC;EAFlB,CAHR;EAOQC,MAAM,EACN;IACEC,IAAI,EAAC,EADP;IAEEC,KAAK,EAAC;EAFR;AARR,CADE;AAgBF,MAAMC,YAAY,GAAGjB,aAAa,CAAES,YAAF,EAAgB;EAChD,CAACF,cAAD,GAAkBW,KAAD,IACjB;IACE,IAAGA,KAAK,CAACJ,MAAN,CAAaC,IAAhB,EACA;MACEG,KAAK,CAACP,SAAN,CAAgBC,YAAhB,GAA+B,IAA/B;IACD,CAHD,MAKA;MACIM,KAAK,CAACP,SAAN,CAAgBC,YAAhB,GAA+B,KAA/B;IACH;EACF,CAX+C;EAYhD,CAACV,eAAD,GAAoB,CAACgB,KAAD,EAAQC,MAAR,KACpB;IACED,KAAK,CAACJ,MAAN,CAAaC,IAAb,GAAoBI,MAAM,CAACf,OAAP,CAAeD,IAAnC;EAED,CAhB+C;EAiBhD,CAACE,gBAAD,GAAqB,CAACa,KAAD,EAAQC,MAAR,KACrB;IACED,KAAK,CAACJ,MAAN,CAAaE,KAAb,GAAqBG,MAAM,CAACf,OAAP,CAAeD,IAApC;EACD,CApB+C;EAqBhD,CAACK,eAAD,GAAqBU,KAAD,IACpB;IACE,MAAME,OAAO,GAAG,+DAAhB;IACD,MAAMC,MAAM,GAAGD,OAAO,CAACE,IAAR,CAAaJ,KAAK,CAACJ,MAAN,CAAaE,KAA1B,CAAf;;IACA,IAAGK,MAAH,EACA;MACCH,KAAK,CAACP,SAAN,CAAgBE,aAAhB,GAAgC,IAAhC;IACA,CAHD,MAKA;MACCK,KAAK,CAACP,SAAN,CAAgBC,YAAhB,GAA+B,KAA/B;IACA;EACD,CAjC+C;EAkChD,CAACN,aAAD,GAAmBY,KAAD,IAClB;IACEA,KAAK,CAACP,SAAN,CAAgBC,YAAhB,GAA+B,KAA/B;IACAM,KAAK,CAACP,SAAN,CAAgBE,aAAhB,GAAgC,KAAhC;IACAK,KAAK,CAACR,MAAN,GAAe,KAAf;EACD,CAvC+C;EAwChD,CAACT,QAAD,GAAciB,KAAD,IACb;IACEA,KAAK,CAACR,MAAN,GAAe,IAAf;EACD;AA3C+C,CAAhB,CAAlC;AAkDA,eAAeO,YAAf"},"metadata":{},"sourceType":"module"}