{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\ReactJS\\\\mimba\\\\src\\\\HOC\\\\withLoginNavigate.js\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let withLoginNavigate = Component => {\n  let compWithLoginNavigate = props => {\n    if (props.isAuth) {\n      return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }, this);\n    } else if (window.location.pathname == '/Login') {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return compWithLoginNavigate;\n};","map":{"version":3,"names":["Navigate","withLoginNavigate","Component","compWithLoginNavigate","props","isAuth","window","location","pathname"],"sources":["D:/Work/ReactJS/mimba/src/HOC/withLoginNavigate.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\"\r\n\r\nexport let withLoginNavigate = (Component) =>\r\n{\r\n    let compWithLoginNavigate = (props) =>\r\n    { \r\n    \r\n        if(props.isAuth)\r\n        {\r\n        return(\r\n           <Component />\r\n        )\r\n        }\r\n        else if(window.location.pathname=='/Login')\r\n        {\r\n            return null\r\n        }\r\n        else{\r\n         return <Navigate to='/Login' />\r\n        }\r\n    }\r\n\r\n\r\n   return compWithLoginNavigate\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;;AAEA,OAAO,IAAIC,iBAAiB,GAAIC,SAAD,IAC/B;EACI,IAAIC,qBAAqB,GAAIC,KAAD,IAC5B;IAEI,IAAGA,KAAK,CAACC,MAAT,EACA;MACA,oBACG,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QADH;IAGC,CALD,MAMK,IAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,IAA0B,QAA7B,EACL;MACI,OAAO,IAAP;IACH,CAHI,MAID;MACH,oBAAO,QAAC,QAAD;QAAU,EAAE,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA,QAAP;IACA;EACJ,CAhBD;;EAmBD,OAAOL,qBAAP;AACF,CAtBM"},"metadata":{},"sourceType":"module"}